*인터셉터는 어디생김? = 웹어플리케이션 컨텍스트에 생긴다... 즉 주입받을수있다. Service같은것들
 
 스프링+서블릿 뭐 짬뽕임.. 그래서 아예 앞단 필터로뺴는게 진짜 분리지..

-----------------------------------------------------------------------------------------------------

			 	       	         ↗ 컨트롤러1
          --> 필터 ---> 디스패처서블릿 -  [인터셉터]      → 컨트롤러2
	(인코딩처리등)		        ↓	         ↘ 컨트롤러3
				        ↓	
          <----------톰캣-------------->	       필터의역할을한다고 보면됨
				       @Auth : 컨트롤러,메소드,타입에달림? 
				       @AuthUser() :파라미터에달림 →ArgumentResolver		

				* 서블릿과 컨트롤러 사이에있지만 실제적으로 
				  핸들러매핑을보고(url,메소드정보등을 받고나서)
				  컨트롤러의핸들러 실행 전에 인터셉터를 거치는것이다.
------------------------------------------------------------------------------------------------------

 필터 : 자바EE스펙
   ↕ 
 인터셉터 : 스프링 스펙
 스프링시큐리티 = 내부를보면 인터셉터로되어있다? 
	         =  스프링시큐리티는 기본적으로 필터가 4개필요함
					( 로그인 로그아웃필터, 누군지확인 이런필터 등등)

----------------------------
구현 예제1 - 인터페이스

 1. 인터페이스를구현 = POJO라면서? (이건 시스템외적인것(보안)이기떄문에 POJO가아니여도됨 오해 ㄴㄴ)
 	preHandle //핸들러호출전에 불림- 핸들러요청여부결정		
	postHandle // 핸들러 호출된뒤
	afterCompletion // 뷰까지 렌더링작업이 끝난뒤

 2. spring-servlet.xml 설정 - url매핑 작업하는거임

-------------
구현예제 2 - 추상클래스( HandlerInterceptorAdapter)
 1. 인터페이스와달리 필요한것만 오버라이드하면됨 필요없는건 디폴트로 되어있음 

 2. spring-servlet.xml 설정 - url매핑 작업하는거임

----------------

 실전 
    com.douzone.security
	|-AuthLoginInterceptor: 핸들러가 로그인확인을하는게아니라 이게 해주게하는거임 
	|-AuthLogoutInterceptor  : 로그아웃 
					이두개는 return false지 왜냐 컨트롤러에 가질않으니 
					로그인성공하든말든

| 이제 컨트롤러에들어가는 url을 다~체크하는 인터셉터를만들자.
  (근데 전부다 할필요는없잔아? 그래서 메소드에 @Auth붙은놈만하겠다 붙여줌!)
  ..어노테이션만들기 Auth -- 참고하셈*	   

	|- @Auth			//클래스나 메소드에붙고
	|-AuthInterceptor   
--------------------------------------
	|- @AuthUser		//파라미터에붙음
	|-AuthUserHandlerMethodArgumentResolver	
					</mvc:argument-resolvers>등록해줘라
					</mvc:annotation-driven>
 	 
		    ↑
디스패처서블릿 ↔ [인터셉터]       / 컨트롤러... 
		    → 컨트롤러로 갈지말지결정(true/false)	