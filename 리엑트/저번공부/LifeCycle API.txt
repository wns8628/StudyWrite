라이프사이클 API
 (생명주기)


 컴포넌트가  1. 나타날 때
             2. 업데이트될때
             3. 사라질 때 

          이중간중간중간과정에서 어떤작업을하고싶다할때쓰는 api임

--------

 Mounting = 컴포넌트가 브라우저상에 나타날때
 
 updating = 프룹스나 스태이트가 변경되거나 할 때 

 Unmounting =  컴포넌트가 사라질떄 

------------
 
 Mounting 

     - constructor = 생성자함수 초기 state선언이나. 처음에 세팅할 해야할일 정의해놓으면되겟지 

     - getDerivedStateFromProps = 프룹스로받은 값을 스태이트에 동기화시킬떄..? 쓴다. 

     - render = 태그값전달,돔어떻게만들지 등등  

     - componentDidMount = 브라우저에 만들어지고난뒤 이게호출됨, 주로 외부라이브러리를 사용하게될때 

                           여기다가 특정차트를 그려주세요 나 Ajax 처리 등 , 브라우저에 나타나고난시점에 어떤작업
			   
 			   api요청등 , 특정이벤트리스닝 클릭이벤트 리슨해놈 이런거

 Updating 

     - getDerivedStateFromProps =  프룹스로받은 값을 스태이트에 동기화시킬떄..? 쓴다
				   쓸려면 스태틱값으로 넣어주고, 인자로(nextProps,prevState)를 넣는다 
					     		       다음받아올프롭스값, 업데이트되기전 스테이트값가져옴 

     - **shouldComponentUpdate = 중요함수!!! 컴포넌트가업데이트될때 성능을 최적화시키고싶을때 사용
				 
				 예를들어 부모컴포넌트가 리렌더링되면 자식컴포넌트도다 렌더링이 다시됨.(버츄얼돔에 그린다. 실제말고)
   
                                 즉 버추얼돔에 그리는것조차 아끼고싶을때 쓴다.(true,false) 인자 (nextProps, nextState)



    -  getSnapshotBeforeUpdate = 렌더함수호출뒤 이게호출됨 / 렌더링된결과가 브라우저에 띄워지기 바로직전에 실행
                              
                                 /스크롤위치,해당돔의크기등을 사전에 가져오고싶다 이럴때 씀 

    -  componentDidUpdate      = 작업마치고 업데이트됐을때 호출됨 , 예를들어 스태이트가바꼈을때 이전의상태와 지금상태가바꼈다.
                                 다르다 그러면 어떤작업을하겠다 이런걸적지 


  Unmounting  
  
     - componentWillUnmount = componentDidMount 에서 리슨해놓은것을 없애주면됨


---------------------------------------

 컴포넌트 에러발생시
   
 	componentDidCatch(error, info)               //부모컴포넌트에서 정의해줘야함 

       